spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/backend
    username: backend
    password: ${POSTGRES_PASSWORD:backendpass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://${DOMAIN_NAME}/auth/realms/marc
          jwk-set-uri: https://${DOMAIN_NAME}/auth/realms/marc/protocol/openid-connect/certs

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:}
    password: ${MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

springdoc:
  api-docs:
    server:
      url: "https://${DOMAIN_NAME}/api"
  swagger-ui:
    path: /swagger-ui
    enabled: false  # Disable in production

server:
  port: 8082
  servlet:
    context-path: /api
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    prometheus:
      cache.time-to-live: 10s
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    root: INFO
    fr.hackaton.backend: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/backend/application.log
    max-size: 10MB
    max-history: 30

minio:
  endpoint: http://minio:9000
  access-key: ${MINIO_ROOT_USER:minio}
  secret-key: ${MINIO_ROOT_PASSWORD:password}
  bucket:
    name: trybucket
